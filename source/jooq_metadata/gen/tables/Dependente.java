/**
 * This class is generated by jOOQ
 */
package jooq_metadata.gen.tables;


import ceylon.language.String;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import jooq_metadata.converter.CeylonStringConverter;
import jooq_metadata.gen.Keys;
import jooq_metadata.gen.Public;
import jooq_metadata.gen.tables.records.DependenteRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Dependente extends TableImpl<DependenteRecord> {

    private static final long serialVersionUID = 1718926377;

    /**
     * The reference instance of <code>public.dependente</code>
     */
    public static final Dependente dependente = new Dependente();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<DependenteRecord> getRecordType() {
        return DependenteRecord.class;
    }

    /**
     * The column <code>public.dependente.id</code>.
     */
    public final TableField<DependenteRecord, Integer> id = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('dependente_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.dependente.nome</code>.
     */
    public final TableField<DependenteRecord, String> nome = createField("nome", org.jooq.impl.SQLDataType.VARCHAR.length(200), this, "", new CeylonStringConverter());

    /**
     * The column <code>public.dependente.id_pessoa</code>.
     */
    public final TableField<DependenteRecord, Integer> idPessoa = createField("id_pessoa", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>public.dependente</code> table reference
     */
    public Dependente() {
        this("dependente", null);
    }

    /**
     * Create an aliased <code>public.dependente</code> table reference
     */
    public Dependente(java.lang.String alias) {
        this(alias, dependente);
    }

    private Dependente(java.lang.String alias, Table<DependenteRecord> aliased) {
        this(alias, aliased, null);
    }

    private Dependente(java.lang.String alias, Table<DependenteRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.public_;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<DependenteRecord, Integer> getIdentity() {
        return Keys.IDENTITY_dependente;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<DependenteRecord> getPrimaryKey() {
        return Keys.dependentePkey;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<DependenteRecord>> getKeys() {
        return Arrays.<UniqueKey<DependenteRecord>>asList(Keys.dependentePkey);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<DependenteRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<DependenteRecord, ?>>asList(Keys.dependente_DependenteIdPessoaFkey);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Dependente as(java.lang.String alias) {
        return new Dependente(alias, this);
    }

    /**
     * Rename this table
     */
    public Dependente rename(java.lang.String name) {
        return new Dependente(name, null);
    }
}
