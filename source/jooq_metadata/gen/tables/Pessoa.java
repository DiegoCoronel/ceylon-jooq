/**
 * This class is generated by jOOQ
 */
package jooq_metadata.gen.tables;


import ceylon.language.String;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import jooq_metadata.converter.CeylonStringConverter;
import jooq_metadata.gen.Keys;
import jooq_metadata.gen.Public;
import jooq_metadata.gen.tables.records.PessoaRecord;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Pessoa extends TableImpl<PessoaRecord> {

    private static final long serialVersionUID = 769442902;

    /**
     * The reference instance of <code>public.pessoa</code>
     */
    public static final Pessoa pessoa = new Pessoa();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PessoaRecord> getRecordType() {
        return PessoaRecord.class;
    }

    /**
     * The column <code>public.pessoa.id</code>.
     */
    public final TableField<PessoaRecord, Integer> id = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('pessoa_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.pessoa.nome</code>.
     */
    public final TableField<PessoaRecord, String> nome = createField("nome", org.jooq.impl.SQLDataType.VARCHAR.length(200), this, "", new CeylonStringConverter());

    /**
     * The column <code>public.pessoa.apelido</code>.
     */
    public final TableField<PessoaRecord, String> apelido = createField("apelido", org.jooq.impl.SQLDataType.VARCHAR.length(200), this, "", new CeylonStringConverter());

    /**
     * Create a <code>public.pessoa</code> table reference
     */
    public Pessoa() {
        this("pessoa", null);
    }

    /**
     * Create an aliased <code>public.pessoa</code> table reference
     */
    public Pessoa(java.lang.String alias) {
        this(alias, pessoa);
    }

    private Pessoa(java.lang.String alias, Table<PessoaRecord> aliased) {
        this(alias, aliased, null);
    }

    private Pessoa(java.lang.String alias, Table<PessoaRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.public_;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<PessoaRecord, Integer> getIdentity() {
        return Keys.IDENTITY_pessoa;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<PessoaRecord> getPrimaryKey() {
        return Keys.pessoaPkey;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<PessoaRecord>> getKeys() {
        return Arrays.<UniqueKey<PessoaRecord>>asList(Keys.pessoaPkey);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Pessoa as(java.lang.String alias) {
        return new Pessoa(alias, this);
    }

    /**
     * Rename this table
     */
    public Pessoa rename(java.lang.String name) {
        return new Pessoa(name, null);
    }
}
